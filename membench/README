

                                                BENCHMARK DE ACCESO A MEMORIA

        Programa para verificar los tiempos de acceso a las distintas memorias de una máquina ( L1 cache, L2 cache ( si tuviese) y memoria principal.

      El objetivo es calcular el tiempo de lectura y escritura de diferentes posiciones de un array separadas en tramos de longitud variable,
para cada tamaño de array y para cada distancia entre posiciones se debe registra el caĺculo de tiempos y reflejar los resultados en una gráfica

      El algoritmo del benchmark (membench.c) consiste en incrementar en uno valores del array y posteriormente restarle a ese tiempo el mismo nº de incrementos en uno de variables de tipo registro. Se generarán los resultados de tiempos lectura y escritura a posición de memoria para cada tamaño de array y longitud de tramo en el fichero membench.out posteriormente se generará una gráfica con gnuplot dibujando una línea para cada tamaño de array siendo el eje X las diferentes longitudes de tramo y el Y los tiempos de acceso. Para ello ejecutar `make`.

      De esta manera se puede observar en las gráficas el tiempo mínimo como el tiempo de acceso a cache L1 que será aquel para arrays de tamaño inferior a la cache del ordenador, el tiempo mínimo para arays superiores a L1 a partir de tramos superiores al tamaño de la línea de cache será el tiempo de acceso a L2 y el  tiempos para arrays mayores de L2 para tramos superiores al tamaño de la linea de cache de L2 será el tiempo de acceso a memoria.

      Observando en dichas gráficas el primer incremento significativo de tiempo para tamaño superior a L1 cache indicará el tamaño de tramo igual al tamaño de linea L1 cache, el 2º incremento significativo para tamaño superior a L2 cache indicará el amaño de tramo igual al tamaño de linea L2 cache.

      La explicación de este benchmark se puede ver gráficamente en el fichero membench.ppt

      Las pruebas se han realizado en 2 máquinas, un pórtatil intel pentium M 760 a 2Ghz, y el Mac de optica (optica.usal.es), se incluyen ficheros con las caracteristicas de ambos equipos, los resultados en ambas máquinas ya las gráficas correspondientes. Para las pruebas en la máquina de óptica se ha modificado el código para sustituir la función clock_gettime ( que mide el tiempo en ns y esta incluida en la libreria rt de ubuntu) por la función gettimeofday (que mide el tiempo en ns) puesto que no existe la función clock_gettime en MACPORTS.

      También se añade un código (membench_modificado.c) que realiza en lugar del incremento de una posición de memoria, el producto de 2 posiciones de memoria y la suma a otra, que sirve para demostrar que no existe en la mayoria de los casos diferencia significativa entre leer una posición de memoria y el producto y suma de posiciones de memoria consecutivas.

     

      

                               
